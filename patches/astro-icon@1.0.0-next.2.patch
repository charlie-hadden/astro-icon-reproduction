diff --git a/components/Icon.astro b/components/Icon.astro
index 2e84082c54c36bc4f7ab715f7a42535248427fa9..400d5ce3b8e9fc377884474b9df7a955665ca9e7 100644
--- a/components/Icon.astro
+++ b/components/Icon.astro
@@ -1,6 +1,6 @@
 ---
 import icons, { config } from "virtual:astro-icon";
-import { getIconData, iconToSVG } from "@iconify/utils";
+import { getIconData, iconToSVG, replaceIDs } from "@iconify/utils";
 import type { HTMLAttributes } from "astro/types";
 import { cache } from "./cache.js";
 // @ts-expect-error - Types are generated by the integration
@@ -101,7 +101,7 @@ if (props.size) {
 }
 const renderData = iconToSVG(iconData);
 const normalizedProps = { ...renderData.attributes, ...props };
-const normalizedBody = renderData.body;
+const normalizedBody = replaceIDs(renderData.body);
 ---
 
 <svg {...normalizedProps} data-icon={name}>
diff --git a/dist/vite-plugin-astro-icon.js b/dist/vite-plugin-astro-icon.js
index 2ec4df75fc4a13b002462592621e8cec0438ca17..bc617550af36ec4b7ca765034e17600e0ef2b424 100644
--- a/dist/vite-plugin-astro-icon.js
+++ b/dist/vite-plugin-astro-icon.js
@@ -1,7 +1,7 @@
 import { mkdir, stat, writeFile } from "node:fs/promises";
 import loadLocalCollection from "./loaders/loadLocalCollection.js";
 import loadIconifyCollections from "./loaders/loadIconifyCollections.js";
-export async function createPlugin({ include = {}, iconDir = "src/icons" }, { root }) {
+export async function createPlugin({ include = {}, iconDir = "src/icons", svgoOptions }, { root }) {
     const virtualModuleId = "virtual:astro-icon";
     const resolvedVirtualModuleId = "\0" + virtualModuleId;
     // Load provided Iconify collections
@@ -18,7 +18,7 @@ export async function createPlugin({ include = {}, iconDir = "src/icons" }, { ro
             if (id === resolvedVirtualModuleId) {
                 try {
                     // Attempt to create local collection
-                    const local = await loadLocalCollection(iconDir);
+                    const local = await loadLocalCollection(iconDir, svgoOptions);
                     collections["local"] = local;
                 }
                 catch (ex) {